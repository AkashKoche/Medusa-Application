name: Deploy to AWS ECS (Fargate)

on:
  push:
    branches:
      - main


env:
  AWS_REGION: us-east-1
  BACKEND_ECR_REPO: medusa-backend
  FRONTEND_ECR_REPO: medusa-frontend
  TF_WORKING_DIR: terraform


jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build & Push Backend Image
        run: |
          docker build -t $BACKEND_ECR_REPO ./medusa-store
          docker tag $BACKEND_ECR_REPO:latest ${{ steps.login-ecr-outputs.registry }}/$BACKEND_ECR_REPO:latest
          docker push ${{ steps.login-ecr-outputs.registry }}/$BACKEND_ECR_REPO:latest

      - name: Build & Push Frontend Image
        run: |
          docker build -t $FRONTEND_ECR_REPO ./medusa-store-front
          docker tag $FRONTEND_ECR_REPO:latest ${{ steps.login-ecr.outputs.registry }}/$FRONTEND_ECR_REPO:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/$FRONTEND_ECR_REPO:latest

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Apply
        run: terraform apply --auto-approve
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Force New Deployment on ECS (Backend)
        run: aws ecs update-service --cluster medusa-cluster --service medusa-backend --force-new-deployment

      - name: Force New Deployment on ECS (Frontend)
        run: aws ecs update-service --cluster medusa-cluster --service medusa-frontend --force-new-deployment
